
Revis√£o de Programa√ß√£o em Python
Alunos da Rede P√∫blica Municipal de Santana de Parna√≠ba inscritos na F√°brica de Programadores!
Neste notebook, vamos revisar os conceitos aprendidos:

Vari√°veis e tipos b√°sicos üòÅ
Listas üìã
Estruturas condicionais (if, elif, else) ‚¨ÖÔ∏è‚û°Ô∏è
Casting ü´†
Fun√ß√µes üìê
Escopo (global, local) üåçüè†
Composi√ß√£o ‚ûó
Loops (while, for) üåÄ
L√≥gica b√°sica de programa√ß√£o üß†
Responda todos os exerc√≠cios utilizando composi√ß√£o!

Exerc√≠cio 1: Vari√°veis e Tipos B√°sicos
# 1. Declare vari√°veis para armazenar:
#    - Seu nome (string)
#    - Sua idade (int)
#    - Sua altura em metros (float)
#    - Se voc√™ gosta de programar (True, False)
#    - Depois, imprima cada uma dessas vari√°veis

# Seu c√≥digo aqui

nome="Bia"
idade=20
altura=1.10
gosta_de_programar=True

print(nome)
print(idade)
print(altura)
print("gosta_de_programar")
Bia
20
1.1
gosta_de_programar
Exerc√≠cio 2: Opera√ß√µes com Listas
# 2. Declare uma lista chamada 'frutas' com 5 frutas diferentes
#    - Adicione uma nova fruta no final da lista
#    - Remova a segunda fruta da lista
#    - Imprima a lista resultante
#    - Imprima apenas a terceira fruta da lista

# Seu c√≥digo aqui

frutas=["ma√ß√£","banana","laranja","uva","pera"]
frutas.append(["mel√£o"])
frutas.pop(1)
print(frutas)
print(frutas[2])
    
['ma√ß√£', 'laranja', 'uva', 'pera', ['mel√£o']]
uva
Exerc√≠cio 3: Fun√ß√µes, Escopo e Tipos de Dados
# 3. Defina uma fun√ß√£o chamada calcular_dobro que recebe um n√∫mero inteiro como par√¢metro.
#    - Dentro da fun√ß√£o, calcule o dobro desse n√∫mero e atribua o resultado a uma vari√°vel local chamada resultado_dobro.
#    - A fun√ß√£o deve retornar resultado_dobro.
#    - Fora da fun√ß√£o, invoque a fun√ß√£o com o n√∫mero 7 e atribua o valor retornado a uma vari√°vel global chamada meu_dobro.
#    - Imprima o valor de meu_dobro.

# Seu c√≥digo aqui
  Cell In[44], line 10
    return resultado_dobro=calcular_dobro(7)
                          ^
SyntaxError: invalid syntax
Exerc√≠cio 4: Estruturas Condicionais (if, else)
# 4. Crie um programa que verifica se um n√∫mero √© positivo, negativo ou zero
#    - Pe√ßa para o usu√°rio digitar um n√∫mero
#    - Use if, elif e else para verificar o n√∫mero
#    - Imprima o resultado

# Seu c√≥digo aqui
numero=int(input("Digite um numero:"))
if numero >=0:
    print("positivo")
elif numero <=0:
    print("Negativo")
else:
    print("Zero")
positivo
Exerc√≠cio 5: Loop While
# 5. Crie um contador regressivo de 5 at√© 1 usando while
#    - A cada itera√ß√£o, imprima o n√∫mero atual
#    - Quando chegar a 1, imprima "Fogo!"

# Seu c√≥digo aqui
x=5
while x >=1:
    print(x)
    x=x - 1
print("Fogo!")
5
4
3
2
1
Fogo!
Exerc√≠cio 6: Loop For
# 6. Crie um programa que calcula a m√©dia de 5 notas usando for
#    - Pe√ßa para o usu√°rio digitar 5 notas
#    - Use um loop for para somar as notas
#    - Calcule e imprima a m√©dia

# Seu c√≥digo aqui
Exerc√≠cio 7: Escopo Global e Local
# 7. Defina uma vari√°vel global chamada saldo_inicial com o valor 1000.50 (tipo float).
#    - Crie uma fun√ß√£o chamada depositar que recebe um valor_deposito (float) como par√¢metro.
#    - Dentro da fun√ß√£o depositar, adicione o valor_deposito ao saldo_inicial. Lembre-se de usar a palavra-chave global para modificar a vari√°vel global.
#    - Fora da fun√ß√£o, chame depositar com o valor 250.75.
#    - Ap√≥s a chamada da fun√ß√£o, imprima o valor atualizado de saldo_inicial.

# Seu c√≥digo aqui
saldo_inicial=1000.50
def depositar(valor_deposito):
    global saldo_inicial
    saldo=saldo_inicial+valor_deposito
depositar(250.75)
print(saldo_inicial)
    
1000.5
 
Exerc√≠cio 8: Listas e Loops
# 8. Crie uma lista de n√∫meros de 1 a 10
#    - Use um loop for para imprimir apenas os n√∫meros pares
#    - Depois, crie uma nova lista com os n√∫meros √≠mpares
#    - Imprima a lista de √≠mpares

# Seu c√≥digo aqui

pares=[1,10]
for B in numeros:
    if B %2==0:
        pares.append(B)
    

impares=[1,10]
for B in numeros:
    if B %2==3:
        impares.append(B)
        print(impares)
Exerc√≠cio 9: Jogo de Adivinha√ß√£o
# 9. Crie um jogo de adivinha√ß√£o onde:
#    - O computador escolhe um n√∫mero aleat√≥rio entre 1 e 10
#    - O jogador tem 3 tentativas para adivinhar o n√∫mero
#    - A cada tentativa, diga se o palpite √© maior ou menor que o n√∫mero secreto
#    - Se acertar, imprima "Parab√©ns!" e encerre o jogo
#    - Se errar todas as tentativas, imprima o n√∫mero correto

# Seu c√≥digo aqui
Exerc√≠cio 10: Desafio Final
# 10. Crie um programa que:
#    - Pede para o usu√°rio digitar o seu pr√≥prio peso em Kgs.
#    - Depois, pede ao usu√°rio que digite sua altura em metros.
#    - Em terceiro, pede ao usu√°rio que digite seu nome e idade.
#    - Adiciona os dados digitados ao final de uma lista (utilizando a fun√ß√£o .append()).
#    - Calcule o √≠ndice de massa corp√≥rea (IMC) do indiv√≠duo de acordo com a f√≥rmula do IMC pesquisada.    
#    - Ap√≥s calcular, registre: Classifica√ß√£o do IMC de acordo com a OMS:
#    - < 16         Magreza grave (grau III)
#    - 16 a 16,9    Magreza moderada (grau II)
#    - 17 a 18,4    Magreza leve (grau I)
#    - 18,5 a 24,9  Eutrofia (estado nutricional adequado)
#    - 25 a 29,9    Pr√©-obesidade
#    - 30 a 34,9    Obesidade moderada (grau I)
#    - 35 a 39,9    Obesidade severa (grau II)
#    - >= 40        Obesidade muito severa (grau III)
#    - Finalmente, em ordem alfab√©tica (utilizando a fun√ß√£o .sort()), exiba todos os itens da lista ao lado de seus dados, seu IMC e sua respectiva classifica√ß√£o.

# Seu c√≥digo aqui
peso=int(input("Digite seu peso"))
altura=int(input("Digite sua altura"))
nome=input("Digite seu nome")
idade=int(input("Digite sua idade"))

dados.append([peso,altura,nome,idade])
imc=int(input(peso/altura*altura))


if peso ==16:
    print("Magreza grave"(grau 3))
elif peso 16 <= imc <= 16,9:
    print("Magreza moderada"(grau2))
elif peso  17 <= imc <= 18,4:
    print("Magreza leve"(grau 1))
elif peso 18,5 <= imc <= 24,9:
    print("Eutrofia"(Estado nutricional adequado))
elif peso 25 <= imc <= 29,9:
    print("Pr√©-obesidade")
elif peso 30 <= imc <= 4,9:
    print("Obesidade moderada"(grau 1))
elif peso  35<= imc 39,9:
    print("Obesidade severa"(grau 2))
else peso <=40:
    print("Obesidade muito severa"(grau3))
  Cell In[53], line 30
    elif peso 16 <= imc <= 16,9:
              ^
SyntaxError: invalid syntax
Parab√©ns por completar os exerc√≠cios! ü•≥
Continue praticando e explorando os conceitos de programa√ß√£o.